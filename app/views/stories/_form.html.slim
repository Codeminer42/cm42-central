div
  .form-group.story-controls
    = form.submit "Save", data: { action: "click->story#close:stop", story_target: "submitButton" }
    - if form.object.persisted?
      = form.submit "Delete", class: "delete", form: "delete_story_#{form.object.id}", data: { story_target: "submitButton", confirm: "Are you sure you want to delete this story?" }
    input.cancel type="button" value="Cancel" data-action="click->story#close:prevent:stop" data-story-target="submitButton"

div
  - if form.object.persisted?
    .col-xs-12.form-group.input-group.input-group-sm
      span.input-group-btn
        button.btn.btn-default.btn-clipboard type="button" title="Copy URL" data-clipboard=story_url(form.object)
          img.clipboard-icon src="/clippy.svg" alt="Copy URL"
        button.btn.btn-default.btn-clipboard-id.btn-clipboard type="button" title="Copy ID" data-clipboard="##{form.object.id}"
          | ID
        /button.btn.btn-default.toggle-history title="View history"
          i.mi.md-18 history
        /button.btn.btn-default.clone-story title="Clone story"
          i.mi.md-18 content_copy
      input#story-link-5433.form-control.input-sm readonly=true value=story_url(form.object)

.form-group
  = form.label :title
  = form.text_field :title, placeholder: "Story title", maxlength: "255", class: "title form-control input-sm", data: { story_target: "permanent" }

.form-group.form-inline
  .form-group
    = form.label :estimate
    br
    = form.select :estimate, form.object.project.point_values, { disabled: true, include_blank: "no estimate" }, { class: "form-control input-sm story_estimate", data: { story_target: "permanent" } }

  .form-group
    = form.label :story_type
    br
    = form.select :story_type, form.object.story_types, {}, { class: "form-control input-sm story_type", data: { story_target: "permanent" } }

  .form-group
    = form.label :state
    br
    = form.select :state, form.object.states, {}, { class: "form-control input-sm story_state", data: { story_target: "permanent" } }

.form-group.form-inline
  .form-group
    = form.label :requested_by_id, "Requested by"
    br
    = form.collection_select :requested_by_id, form.object.project.users, :id, :name, { include_blank: "---" }, { class: "form-control input-sm requested_by_id", data: { story_target: "permanent" } }

  .form-group data-owned-by=""
    = form.label :owned_by_id, "Owned by"
    br
    = form.collection_select :owned_by_id, form.object.project.users, :id, :name, { include_blank: "---" }, { class: "form-control input-sm owned_by_id", data: { story_target: "permanent" } }

.form-group
  .form-group data-tags=""
    = form.label :labels
    br
    = form.text_field :labels, class: "form-control input-sm labels tagit-hidden-field", data: { story_target: "permanent" }
    /
      ul.tagit.ui-widget.ui-widget-content.ui-corner-all
        li.tagit-new
          input.ui-widget-content.ui-autocomplete-input type="text" autocomplete="off"

.form-group
  .story-description
    = form.label :description
    br
    = form.text_area :description , class: "form-control description-textarea", data: { story_target: "permanent", controller: "textarea-autogrow" }

= form.fields_for :comments, Comment.new do |comment_form|
  div
    .form-group
      = comment_form.label :body, "Comments"
      .commentlist
        = render form.object.comments

  div
    .comment_form.clearfix
      = comment_form.text_area :body, class: "form-control comment-textarea", data: { story_target: "permanent comment", autocomplete_usernames_target: "field", controller: "textarea-autogrow" }
      = comment_form.label :attachments, "Attachment(s)"
      = comment_form.bard_file_field :attachments, multiple: true, data: { turbo_permanent: true, story_target: "attachment" }
      button.add-comment.btn.btn-default.btn-xs type="submit" data-story-target="submitButton"
        | Add comment
