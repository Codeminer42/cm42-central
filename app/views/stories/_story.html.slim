- search_result = defined?(search_result) ? search_result : false
- story_dom_id = search_result ? "story-search-result-#{story.id}" : story_anchor(story)
- story_dom_id += "-#{story.column.sub("#","")}" if story.new_record?

- cache_if story.persisted?, story do
  .story.closed class=[story.story_type, story.state, ("new-story" if story.new_record?), ("searchResult" if search_result)] id=story_dom_id data-id=story.id data-position=story.position data-state=story.state data-story-type=story.story_type data-controller="story" data-action="click->story#open"
    input.toggle-story type="checkbox" data-story-target="checkbox" data-turbo-permanent=true id="#{story_dom_id}-toggle"
    .closed.flex
      .state-actions
        - if search_result
          a#locate.btn.btn-default.locate-btn href=story_url(story)
            i.mi.md-gps-fixed.md-14
              | gps_fixed

        - if story.persisted? && story.events.any?
          div
            .state-actions
              - story.events.each do |event|
                = form_for [:transition, @project, story] do |form|
                  = form.submit event, name: "event", class: "#{event} transition"

      .story-icons
        span.popover-activate
          = icon_text(story)
          span.estimate = story.estimate
          - if story.comments.length > 0 || story.description.present?
            i.mi.md-14.md-dark.details question_answer

      .story-title
        = story.title
        '
        a.initials href="?q=user:#{story.owned_by_initials}" title=story.owned_by_name = story.owned_by_initials

    .editing
      = form_for([@project, story], method: "delete", html: { id: "delete_story_#{story.id}" }) {}

      template data-controller="lazy-template" style="display: block"
        = form_for [@project, story], namespace: dom_id(story), data: { story_target: "form" } do |form|
          = render "stories/form", form: form

